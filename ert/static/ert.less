@import (reference) 'bower/bootstrap/less/bootstrap.less';

body, html {
    height: 100%;
}

body {
    background-image: url('/static/background-image.png');
    > .main-container {
	.container;
	background: white;
	padding-bottom: 50px;
	min-height: 100%;
    }
}

.logo {
    text-decoration: none;
    color: inherit;
    a {
	color: inherit;
    }
    h1 {
	    display: inline-block;
	    margin-left: 15px;
    }
    img {
	width: 67px;
	position: relative;
	top: -9px;
    }
}

.logo.animation-logo {
    left: 30%;
    top: 40%;
    img {
	width: 0px;
	height: 0px;
    }
    h1 {
	font-size: 0px;
    }
    position: fixed;
}

.header {
    .make-row();
    margin-top: 20px;
    .logo {
	.make-md-column(6);
    }
    .nav-menu {
	.make-xs-column(10);
	.make-md-column(5);
	ul { .pull-right;}
    }
    .lang-select {
	.make-xs-column(2);
	.make-md-column(1);
	.text-center;
	img,>div {
	    cursor: pointer;
	}
    }
}

.footer {
    .text-center;
    margin-top: 20px;
}

.home {
    .make-row();
    .text-center;
    margin-top: 100px;
    .retail,.breweries {
	.make-md-column(4);
    }
    .retail {
	.make-md-column-offset(1);
    }
    .breweries {
	.make-md-column-offset(2);
    }
    .cta-btn {
	.btn;
	.btn-lg;
	.btn-primary;
	margin-bottom: 10px;
    }
    p {
	font-size: 120%;
    }
}

.about-box {
    font-size: 140%;
    text-align: center;
    margin-top: 30px;
    .make-md-column(4);
    img {
	.opacity(0.4);
    }
}

.contact-col {
    .make-md-column(6);
}

.contact-row {
    .make-row();
    margin-top: 20px;
    .contact-box {
	.make-md-column(6);
	h1 {
	    font-size: 18px;
	}
	h2 {
	    font-size: 16px;
	    font-style: italic;
	    margin-top: 0px;
	}
    }
}

.contact-form {
    .control-label {
	.make-md-column(4);
	/* text-align: right; */
    }
    input,select,textarea {
	.form-control;
    }
    .form-input {
	.make-md-column(8)
    }
    textarea {
	height: 100px;
    }
    /* Validation classes */
    input.ng-dirty.ng-invalid,
    &.ng-dirty input.ng-invalid {
	border-color: @brand-danger;
    }
    .error {
	font-weight: bold;
	.text-danger;
    }
    /* Submission status feedback */
    .alert {
	.text-center;
    }
}

.blog-post {
    .panel;
    .panel-default;
    img {
	max-width: 600px;
	.img-responsive();
    }
}

.table-row() {
    border-style: solid;
    border-width: 1px 0px 0px 0px;
    border-color: @table-border-color;
    &:last-child {
	border-bottom-width: 1px;
    }
    &:hover {
	background: @table-bg-hover;
    }
}

.beer-cart-modal {
    .modal;
    .fade;
    .alert-empty {
	.alert;
	.alert-info;
    }
}

/* Table of beers currently in the order */
.order-table {
    .table;
    .table-hover;
    tr button.close {
	visibility: hidden;
	float: initial;

    };
    tr:hover button.close { visibility: initial };
    td,th {
	.text-center;
	&:first-child {
	    .text-left;
	}
    }
    input {
	.form-control;
	max-width: 60px;
	margin-left: auto;
	margin-right: auto;
    }

}
    .totals {
	font-weight: bold;
	.text-right;
	margin-right: 20px;
    }

.back-btn,.beer-store-btn {
    .btn;
    .btn-default;
}

.back-icon {
    .glyphicon;
    .glyphicon-arrow-left;
}

.cart-icon {
    .glyphicon;
    .glyphicon-shopping-cart;
}

.beer-list {
    .brewery {
	font-style: italic;
    }
    .beer-row {
	h1.beer-name {
    	    margin-top: 2px;
    	    margin-bottom: 0px;
    	    font-size: 110%;
    	    font-weight: bold;
	}
	img {
	    .img-responsive();
	    max-width: 40px;
	}
	button.invalid {
    	    .btn;
    	    .btn-default;
	}
	button.valid {
	    .btn;
	    .btn-success;
	}
	input {
    	    .form-control;
	    width: 100px;
	}
    }
    .beer-cart-btn {
	.text-right;
	.make-md-column(4);
	margin-top: 28px;
    }
}

.beer-detail {
    .add-control {
	input {
	    .form-control;
	}
	button {
	    .btn;
	    .btn-primary;
	}
    }
    img {
	.center-block;
    }
    h2.brewery {
	font-size: 150%;
    }
    .characteristics {
	margin-top: 20px;
	margin-bottom: 20px;
	p { margin-bottom: 0px; }
    }
    .description {
	text-align: justify;
	white-space: pre-wrap;
    }
}

/* Mixins for form validation, copied from bootstrap */
.input-validation(@text-color: #555; @border-color: #ccc; @background-color: #f5f5f5) {
    color: @text-color;
    border-color: @border-color;
    .box-shadow(inset 0 1px 1px rgba(0,0,0,.075)); // Redeclare so transitions work
    &:focus {
	border-color: darken(@border-color, 10%);
	@shadow: inset 0 1px 1px rgba(0,0,0,.075), 0 0 6px lighten(@border-color, 20%);
	.box-shadow(@shadow);
    }
}
.input-error {
    .input-validation(@state-danger-text, @state-danger-text, @state-danger-bg);
    /* Show the relevant error message after validation */
    &.ng-invalid-required {
	~ .errors .error-required,
	~ * .errors .error-required {
	    display: initial;
	}
    }
    &.ng-invalid-email {
	~ .errors .error-email,
	~ * .errors .error-email {
	    display: initial;
	}
    }
}
.input-success {
    .input-validation(@state-success-text, @state-success-text, @state-success-bg);
}
/* Error messages before validation */
.errors {
    color: @state-danger-text;
    font-weight: bold;
    padding-left: 13px;
    li {
	display: none;
    }
}

/* Validation classes corresponding the angularjs form validation states */
input.ng-dirty.ng-invalid,
textarea.ng-dirty.ng-invalid {
    .input-error;
}
input.ng-dirty.ng-valid,
textarea.ng-dirty.ng-valid {
    .input-success;
}
form.dirty {
    input.ng-invalid,
    textarea.ng-invalid {
	.input-error;
    }
}

.checkout-header {
    h1 {
	display: inline-block;
    }
    .back-btn {
	vertical-align: text-bottom;
    }
}

.checkout-form {
    .form-horizontal;
    label.control-label {
	.make-sm-column(4);
    }
    label {
	font-weight: normal;
    }
    .required {
	font-weight: bold;
    }
    input,textarea {
	.form-control;
    }
    #address {
	height: 75px;
    }
}

.checkout-summary {
    .make-md-column(6);
    /* Box that notifies the user the cart is empty */
    .alert-empty {
	.alert;
	.alert-warning;
	font-weight: bold;
    }
}